<div>
    <SortableTable ResponsiveType="@ResponsiveType" UseNonFixedColumns="@UseNonFixedColumns"
                   ShowContentSpinner="@ContentSpinner" ShowNoContent="@ShowNoContent" Columns="@Columns"
                   OnSortChanged="@OnSortChanged" GetSortClass="@GetSortClass">
        @ChildContent
    </SortableTable>

    @if (ShowPaginator)
    {
        <div class="paginator-container">
            <BlazorPager CurrentPage="@(CurrentPage ?? 0)"
                         PageCount="@(PageCount ?? 1)"
                         OnPageChanged="async e => { await OnPageChanged.InvokeAsync(e); }"
                         ShowFirstLast="true"
                         ShowPageNumbers="true"
                         VisiblePages="@PaginatorVisiblePages"
                         FirstText="&laquo;"
                         LastText="&raquo;"
                         NextText="&rsaquo;"
                         PreviousText="&lsaquo;" />
        </div>
    }
    else
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
</div>

<MediaQuery Media="@Breakpoints.SmallDown" @bind-Matches="isSmall" />
<MediaQuery Media="@Breakpoints.LargeUp" @bind-Matches="isLarge" />

@code {

    private bool isSmall;
    private bool isLarge;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string ResponsiveType { get; set; } = "table-responsive-sm";

    [Parameter]
    public bool UseNonFixedColumns { get; set; }

    /// <summary>
    ///   When true shows the paginator and CurrentPage etc. should be fine. When false shows a spinner under the table
    /// </summary>
    [Parameter]
    public bool ShowPaginator { get; set; }

    /// <summary>
    ///   When true shows a spinner overlay on the table body (and ShowPaginator is true)
    /// </summary>
    [Parameter]
    public bool ShowContentSpinner { get; set; }

    [Parameter]
    public bool ShowNoContent { get; set; }

    [Parameter]
    public int? CurrentPage { get; set; }

    [Parameter]
    public int? PageCount { get; set; }

    [Parameter]
    [EditorRequired]
    public List<TableColumn> Columns { get; set; } = null!;

    [Parameter]
    public EventCallback<int> OnPageChanged { get; set; }

    [Parameter]
    public EventCallback<string> OnSortChanged { get; set; }

    [Parameter]
    [EditorRequired]
    public SortableTable.CalculateSortClass GetSortClass { get; set; } = null!;

    private int PaginatorVisiblePages
    {
        get
        {
            if (isSmall)
                return 3;

            if (isLarge)
                return 10;

            return 5;
        }
    }

    private bool ContentSpinner => ShowContentSpinner && ShowPaginator;
}
