@using RevolutionaryWebApp.Shared.Models
@inherits EditFormBase<LauncherThriveVersionDTO>
<EditForm EditContext="@EditContext" OnValidSubmit="@OnValidSubmit" class="@(@class)">
    <DataAnnotationsValidator/>

    @if (!ForExistingResource)
    {
        <div class="row">

            <div class="mb-3 col-md-6">
                <label class="form-label" for="@($"thriveVersionFormInternalName-{ControlIdSuffix}")">Version Name</label>
                <CustomInputText class="form-control" id="@($"thriveVersionFormInternalName-{ControlIdSuffix}")"
                                 @bind-Value="EditedData.ReleaseNumber"
                                 placeholder="Version (version like 0.6.2 with optional -beta suffix)"/>
            </div>

            <div class="mb-3 col-md-6">
                <div class="form-check">
                    <InputCheckbox class="form-check-input" id="@($"thriveVersionFormStable-{ControlIdSuffix}")"
                                   @bind-Value="EditedData.Stable"/>
                    <label class="form-label" for="@($"thriveVersionFormStable-{ControlIdSuffix}")">
                        Stable Version (non-beta)
                    </label>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="mb-3 col-md-12">
            <div class="form-check">
                <InputCheckbox class="form-check-input" id="@($"thriveVersionFormStartupDetect-{ControlIdSuffix}")"
                               @bind-Value="EditedData.SupportsFailedStartupDetection"/>
                <label class="form-label" for="@($"thriveVersionFormStartupDetect-{ControlIdSuffix}")">
                    Supports startup failure detection
                </label>
            </div>
        </div>
    </div>


    <ValidationSummary/>

    <StatusMessageShower Message="@StatusMessage" Type="@StatusMessageType"/>
    <Button class="my-1 me-1" Enabled="@(!Processing)" type="submit" Spinner="@Processing" ButtonStyle="primary">
        @SaveButtonText
    </Button>

    @ChildContent
</EditForm>

@code {

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool ForExistingResource { get; set; }

}
