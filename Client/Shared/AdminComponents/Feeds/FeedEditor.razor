@inherits ResourceEditorBase<FeedDTO, FeedUpdated, long>
@using RevolutionaryWebApp.Shared.Models
@using RevolutionaryWebApp.Client.Services
@using RevolutionaryWebApp.Shared
@using RevolutionaryWebApp.Shared.Models.Enums
@using RevolutionaryWebApp.Shared.Notifications
@implements IAsyncDisposable

@* TODO: firefox once again complains here about that relative now has an effect here *@
<tr @key="ElementIdPrefix" style="position: relative;">
    <td colspan="@ColumnSpan" class="mb-2 expanded-box">
        <SingleResourceDisplayer Error="@Error" Loading="@Loading" HasData="@(Data != null)">
            @if (Data != null)
            {
                <FeedDataForm EditContext="@editContext" EditedData="@editedData"
                              ControlIdSuffix="@Id.ToString()" StatusMessage="@statusMessage" Processing="@processing"
                              StatusMessageType="@statusMessageType" OnValidSubmit="@Save"/>

                <div>
                    <FeedDiscordWebhooks FeedId="@Id" />
                </div>

                <span class="float-right">
                    <AdminResourceDeleteButtons Deleted="@Data.Deleted" Name="@Data.Name" Id="@Data.Id"
                                                DeleteURLBase="api/v1/FeedConfiguration"
                                                DeletePromptTitle="Delete this Feed?" />
                </span>

                @if (processing)
                {
                    <TableElementProcessingOverlay/>
                }
            }
        </SingleResourceDisplayer>
    </td>
</tr>

@code {

    protected override string ElementIdPrefix => $"{Id}-feedDetails";

    protected override Task<FeedDTO?> StartQuery()
    {
        return Http.GetFromJsonAsync<FeedDTO>($"api/v1/FeedConfiguration/{Id}");
    }

    public override void GetWantedListenedGroups(IUserGroupData currentUserGroups, ISet<string> groups)
    {
        groups.Add(NotificationGroups.FeedUpdatedPrefix + Id);
    }

    protected override FeedDTO CreateEditData(FeedDTO serverData)
    {
        return serverData.Clone();
    }

    protected override string GetSaveEndpoint(FeedDTO serverData)
    {
        return $"api/v1/FeedConfiguration/{serverData.Id}";
    }
}
