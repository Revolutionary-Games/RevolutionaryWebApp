@inject HttpClient Http
@inject NotificationHandler NotificationHandler
@inject NavigationManager NavigationManager
@inherits SingleResourcePage<CLADTO, CLAUpdated, long>
@using RevolutionaryWebApp.Shared.Models
@using RevolutionaryWebApp.Client.Services
@using RevolutionaryWebApp.Shared.Notifications
@implements IAsyncDisposable

<SingleResourceDisplayer Error="@Error" Loading="@Loading" HasData="@(Data != null)">
    @if (Data != null)
    {
        @if (ShowInfoLine)
        {
            <h3>Text for CLA id @Data.Id created at @Data.CreatedAt.ToLocalTime().ToString("G")</h3>
        }

        <div>
            <MarkdownRenderer MarkdownText="@Data.RawMarkdown" AllMarkdownFeatures="@true"/>
        </div>
    }
</SingleResourceDisplayer>

@code {

    [Parameter]
    public bool ShowInfoLine { get; set; }

    protected override Task<CLADTO?> StartQuery()
    {
        return Http.GetFromJsonAsync<CLADTO>($"api/v1/CLA/{Id}");
    }

    public override void GetWantedListenedGroups(IUserGroupData currentUserGroups, ISet<string> groups)
    {
        groups.Add(NotificationGroups.CLAUpdatedPrefix + Id);
    }

    public async ValueTask DisposeAsync()
    {
        await NotificationHandler.Unregister(this);
    }

    protected override Task OnFirstDataReceived()
    {
        return NotificationHandler.Register(this);
    }

}
