@using RevolutionaryWebApp.Shared.Models.Pages
@using SharedBase.Utilities
<h3>
    Editing @TypeName @Data.Title.Truncate()
    @if (Data.Deleted)
    {
        <span class="badge bg-danger ms-1">DELETED</span>
    }
    else if (Data.Visibility == PageVisibility.HiddenDraft)
    {
        <span class="badge bg-secondary ms-1">Draft</span>
    }
</h3>

<ul>
    <li><strong>Title</strong>: @Data.Title</li>
    @* TODO: link to live page *@
    <li><strong>Permalink</strong>: @Data.Permalink</li>
    <li><strong>Visibility</strong>: @Data.Visibility</li>
    @if (Data.Visibility != PageVisibility.HiddenDraft && Data.PublishedAt != null)
    {
        <li><strong>Published At</strong>: @Data.PublishedAt</li>
    }
    @if (ShowType)
    {
        <li><strong>Type</strong>: @Data.Type</li>
    }
    <li><strong>Version</strong>: @Data.VersionNumber</li>
    <li><strong>Created At</strong>: <RecentTimeShortener Time="@Data.CreatedAt"/></li>
    <li><strong>Created By</strong>: <UsernameDisplayer UserId="@Data.CreatorId"/></li>
    <li><strong>Updated At</strong>: <RecentTimeShortener Time="@Data.UpdatedAt"/></li>
    <li><strong>Content Last Edited By</strong>: <UsernameDisplayer UserId="@Data.LastEditorId"/></li>
    <li><strong>Edit Comment</strong>: @Data.LastEditComment</li>
</ul>

@code {

    [Parameter]
    [EditorRequired]
    public VersionedPageDTO Data { get; set; } = null!;

    [Parameter]
    public bool ShowType { get; set; }

    [Parameter]
    public string TypeName { get; set; } = string.Empty;
}
